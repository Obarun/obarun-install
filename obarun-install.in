#!@BINDIR@/bash
# Copyright (c) 2015-2017 Eric Vidal <eric@obarun.org>
# All rights reserved.
# 
# This file is part of Obarun. It is subject to the license terms in
# the LICENSE file found in the top-level directory of this
# distribution and at https://github.com/Obarun/obarun-install/LICENSE
# This file may not be copied, modified, propagated, or distributed
# except according to the terms contained in the LICENSE file.
#
# Assumptions:
#  1) User has partitioned, formatted, and mounted partitions on a directory
#  2) Network is functional
#  3) A valid mirror appears in /etc/pacman.d/mirrorlist
#

##		Check is the functions file exits
sourcing(){
	
	local list
	
	for list in /etc/obarun/install.conf /usr/lib/obarun/{util.sh,install.sh}; do
		if [[ -f "${list}" ]]; then
			source "${list}"
		else
			out_error "Missing file : ${list}"
			exit	
		fi
	done
	
	unset list
}
sourcing

shellopts_save
shellopts_set_unset "extglob" 0

##		Clean before exit

trap "clean_install" ERR QUIT KILL STOP INT TERM 

##		Must be root user 

(( EUID == 0 )) || die "You must be run this script with root privileges" "clean_install"

##		Let's go

##		Update package or not

main_update(){
	out_action "Do you want to update obarun-install package? [y|n]"

	reply_answer

	if (( ! $? )); then
		pac_update "obarun-install" "/var/lib/obarun/obarun-install" "$GIT_ADDR" || die " Impossible to update" "clean_install"
		sourcing
	else
		out_notvalid "WARNING : Some functionalities will cannot works properly"
		out_info "Press enter to continue"
		read enter
	fi
	
	out_action "Do you want to update obarun-install-themes package? [y|n]"
	
	reply_answer

	if (( ! $? )); then
		pac_update "obarun-install-themes" "/var/lib/obarun/obarun-install-themes" "https://github.com/Obarun/obarun-install-themes.git" || die " Impossible to update" "clean_install"
	else
		out_notvalid "WARNING : Some configurations can be out of date"
		out_info "Press enter to continue"
		read enter
	fi
}

warm_msg "You need to update first the glibc package on the host system e.g. : pacman -Sy glibc"

if [[ "$UPDATE" == "yes" ]]; then
	main_update
fi

main_menu




